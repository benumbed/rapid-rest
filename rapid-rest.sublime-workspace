{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"VA",
				"VAULT_SECRETS_PATH"
			],
			[
				"VAULT_SECRE",
				"VAULT_SECRETS_PATH"
			],
			[
				"VAU",
				"VAULT_SECRETS_MOUNT"
			],
			[
				"V",
				"VAULT_SECRETS_MOUNT"
			],
			[
				"secr",
				"secrets_mountpoint"
			],
			[
				"sche",
				"scheduler_args"
			],
			[
				"req",
				"required_keys"
			],
			[
				"Vault",
				"VaultClientError"
			],
			[
				"secrets",
				"secrets_path"
			],
			[
				"enable",
				"enable_vault"
			],
			[
				"enab",
				"enable_vault"
			],
			[
				"image",
				"image_name\tparam"
			],
			[
				"_lo",
				"_log\tstatement"
			],
			[
				"pull",
				"pull_image\tparam"
			],
			[
				"assertDic",
				"assertDictEqual\tfunction"
			],
			[
				"con",
				"containers\tfunction"
			],
			[
				"aut",
				"auto_start\tparam"
			],
			[
				"db_",
				"db_max_acquisition_count\tstatement"
			],
			[
				"Sche",
				"SchedulerAlreadyRunningError\tclass"
			],
			[
				"db",
				"db_max_acquisition_count\tstatement"
			],
			[
				"assert",
				"assertEqual\tfunction"
			],
			[
				"Doc",
				"DockerRun"
			],
			[
				"asser",
				"assertEquals\tstatement"
			],
			[
				"js",
				"json\tfunction"
			],
			[
				"docker",
				"docker_args\tstatement"
			],
			[
				"exit",
				"exit_code\tstatement"
			],
			[
				"POSTG",
				"POSTGRES_DB"
			],
			[
				"_loc",
				"_locate_cfg_value\tfunction"
			],
			[
				"do",
				"docker_args"
			],
			[
				"exec",
				"exec_args\tstatement"
			],
			[
				"cf",
				"cfg_file_path\tstatement"
			],
			[
				"local",
				"local_keys\tstatement"
			],
			[
				"exe",
				"exec_meth\tstatement"
			],
			[
				"requ",
				"required_container_keys\tstatement"
			],
			[
				"loca",
				"_locate_config\tfunction"
			],
			[
				"uni",
				"unique_name"
			],
			[
				"uniq",
				"unique_name\tparam"
			],
			[
				"env",
				"environment"
			],
			[
				"DockerFac",
				"DockerFactoryError\tclass"
			],
			[
				"exce",
				"Exception\tclass"
			],
			[
				"log",
				"log_or_print\tparam"
			],
			[
				"Dock",
				"DockerClient\tclass"
			],
			[
				"class",
				"classmethod\tclass"
			],
			[
				"rec_st",
				"recv_stderr_ready\tfunction"
			],
			[
				"remote",
				"remote_cmd\tparam"
			],
			[
				"_tok",
				"_token_refresh_interval"
			],
			[
				"_jobs",
				"_jobs_by_name"
			],
			[
				"_job",
				"_jobs_by_name"
			],
			[
				"refre",
				"refresh_cache"
			],
			[
				"vault",
				"vaultclient"
			],
			[
				"Sched",
				"SchedulerError"
			],
			[
				"ref",
				"refresh_cache"
			],
			[
				"token",
				"token_info"
			],
			[
				"_token",
				"_token_job_name"
			],
			[
				"ren",
				"renew_token"
			],
			[
				"Vau",
				"VaultClient"
			],
			[
				"Val",
				"VaultClient\tclass"
			],
			[
				"vaultc",
				"vaultclient\tmodule"
			],
			[
				"rew",
				"renew_token"
			],
			[
				"appr",
				"approle_name\tparam"
			],
			[
				"tok",
				"token_info\tstatement"
			],
			[
				"login",
				"login_error\tstatement"
			],
			[
				"VaultCli",
				"VaultClientError\tclass"
			],
			[
				"err",
				"err_msg\tstatement"
			],
			[
				"Vaul",
				"VaultClientError\tclass"
			],
			[
				"wrapp",
				"wrapped_secret_id\tparam"
			],
			[
				"requi",
				"required_keys\tstatement"
			],
			[
				"def",
				"defaults\tstatement"
			],
			[
				"app",
				"apply_needed_defaults\tfunction"
			],
			[
				"prov",
				"provided_args"
			],
			[
				"provide",
				"provided_args\tparam"
			],
			[
				"proi",
				"provided_args\tparam"
			],
			[
				"provid",
				"provided_args\tparam"
			],
			[
				"miss",
				"missing_args\tstatement"
			],
			[
				"missing",
				"missing_args_msg\tstatement"
			],
			[
				"DockerEx",
				"DockerExecError\tclass"
			],
			[
				"sch",
				"sched\tstatement"
			],
			[
				"back",
				"backends\tmodule"
			],
			[
				"repl",
				"reply_txt\tstatement"
			],
			[
				"targ",
				"target_user\tstatement"
			],
			[
				"issu",
				"issue_reminder"
			],
			[
				"sub_a",
				"sub_action_arg\tstatement"
			],
			[
				"andromeda",
				"andromeda_bot1"
			],
			[
				"Key",
				"KeyboardInterrupt\tclass"
			],
			[
				"sc",
				"schedulers"
			],
			[
				"ap",
				"apscheduler\tmodule"
			],
			[
				"job",
				"jobstores\tmodule"
			],
			[
				"vers",
				"versioned_api_root\tparam"
			],
			[
				"version",
				"versioned_root\tstatement"
			],
			[
				"le",
				"getEffectiveLevel\tfunction"
			],
			[
				"mbox_",
				"mbox_controller_api"
			],
			[
				"guin",
				"gunicorn_logger\tstatement"
			],
			[
				"gu",
				"gunicorn_logger\tstatement"
			],
			[
				"json",
				"jsonify\tstatement"
			],
			[
				"klas",
				"klass_name\tstatement"
			],
			[
				"python",
				"python_root\tparam"
			],
			[
				"API",
				"API_ROOT_CLASS_NAME\tstatement"
			],
			[
				"mob",
				"mbox_controller_api\tmodule"
			],
			[
				"root",
				"root_module\tstatement"
			],
			[
				"if",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"control",
				"controller-api"
			],
			[
				"excep",
				"exceptions"
			],
			[
				"storage",
				"storage_module"
			],
			[
				"defau",
				"default_exists"
			],
			[
				"configmg",
				"configmgr"
			],
			[
				"write",
				"write_to_disk"
			],
			[
				"Conf",
				"ConfigDoesNotExist\tclass"
			],
			[
				"default",
				"default_exists\tstatement"
			],
			[
				"defaul",
				"default_config_file\tparam"
			],
			[
				"_load",
				"_load_default_config"
			],
			[
				"default_con",
				"default_config_file"
			],
			[
				"assin",
				"assertIn\tfunction"
			],
			[
				"mbox",
				"mbox_lights\tstatement"
			],
			[
				"_light",
				"_light_cache\tstatement"
			],
			[
				"_li",
				"_light_cache\tstatement"
			],
			[
				"_lig",
				"_lights_by_name\tstatement"
			],
			[
				"ava",
				"available_lights\tfunction"
			],
			[
				"assertDi",
				"assertDictContainsSubset\tfunction"
			],
			[
				"Ase",
				"assertEquals\tstatement"
			],
			[
				"ass",
				"assertIn\tfunction"
			],
			[
				"Phill",
				"PhillipsHue"
			],
			[
				"Ph",
				"PhilipsHue\tclass"
			],
			[
				"auth",
				"auth_token\tparam"
			],
			[
				"rest",
				"restart_policy"
			],
			[
				"c",
				"cfgmgr\tparam"
			],
			[
				"Z",
				"Zone\tclass"
			],
			[
				"Zone",
				"ZoneError\tclass"
			],
			[
				"loa",
				"loaded\tstatement"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 208.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"instal",
				"Colorsublime: Install Theme"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Colorsublime: Install Theme"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"color",
				"Colorsublime: Install Theme"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 486.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/benumbed/Projects/rapid-rest"
	],
	"file_history":
	[
		"/home/benumbed/Projects/bunsched/bunsched.sublime-project",
		"/home/benumbed/Projects/bunsched/requirements.txt",
		"/home/benumbed/Projects/bunsched/docker.env",
		"/home/benumbed/Projects/bunsched/src/bunsched/vaultclient.py",
		"/home/benumbed/Projects/bunsched/.gitignore",
		"/home/benumbed/Projects/bunsched/src/bunsched/scheduler.py",
		"/home/benumbed/Projects/bunsched/src/bunsched_tests/api/test_dockerjobs.py",
		"/home/benumbed/Projects/bunsched/src/bunsched_tests/docker_test_utils.py",
		"/home/robo/Projects/bunsched/bunsched.sublime-project",
		"/home/robo/Projects/bunsched/setup.py",
		"/home/robo/Projects/bunsched/Dockerfile",
		"/home/robo/Projects/bunsched/docker.env",
		"/home/robo/Projects/bunsched/.gitlab-ci.yml",
		"/home/robo/Projects/bunsched/psql-init",
		"/home/robo/Projects/bunsched/src/bunsched_tests/api/__init__.py",
		"/home/robo/Projects/bunsched/src/bunsched/backends/remotecmd.py",
		"/home/robo/Projects/bunsched/src/bunsched/utils.py",
		"/home/robo/Projects/bunsched/requirements.txt",
		"/home/robo/Projects/bunsched/src/bunsched/jobs.py",
		"/home/robo/Projects/bunsched/.gitignore",
		"/home/robo/Projects/bunsched/vault/bunsched-user.json",
		"/home/robo/Projects/bunsched/src/bunsched/dispatcher.py",
		"/home/robo/Projects/bunsched/src/bunsched/backends/dockerexec.py",
		"/home/robo/Projects/bunsched/src/bunsched/backends/localscript.py",
		"/home/robo/Projects/bunsched/src/bunsched/routing.py",
		"/home/robo/Projects/bunsched/src/bunsched/api/v1/__init__.py",
		"/home/robo/Projects/bunsched/src/bunsched/api/__init__.py",
		"/home/robo/Projects/bunsched/README.md",
		"/home/robo/Projects/discord-bot/andromeda_bot/setup.py",
		"/home/robo/Projects/discord-bot/andromeda_bot/requirements.txt",
		"/home/robo/Projects/discord-bot/__init__.py",
		"/home/robo/Projects/discord-bot/Dockerfile",
		"/home/robo/Projects/discord-bot/BasicBot.py",
		"/home/robo/Projects/mbox/mbox.sublime-project",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_scheduler/__init__.py",
		"/home/robo/Projects/mbox/mbox-common/Dockerfile",
		"/home/robo/Projects/mbox/mbox-common/README.md",
		"/home/robo/Projects/mbox/mbox-controller/Dockerfile",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller_api/v1/power/wink.py",
		"/home/robo/Projects/mbox/mbox-old/src/__init__.py",
		"/home/robo/Projects/mbox/mbox-old/src/mbox/__init__.py",
		"/home/robo/Projects/mbox/mbox-old/src/mbox/api-app.py",
		"/home/robo/Projects/mbox/mbox-common/mbox-stack.yml",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller/configmgr/exceptions.py",
		"/home/robo/Projects/mbox/mbox-old/src/mbox/api/v1/music/__init__.py",
		"/home/robo/Projects/mbox/mbox-controller/scratch/huescratch.py",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller_api/__init__.py",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller/backends/lighting/hue.py",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller/backends/philipshue.py",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller/backends/lighting/common.py",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller/configmgr/jsonstorage.py",
		"/home/robo/Projects/mbox/mbox-controller/scratch/json-cfg.py",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller_api/default-config.json",
		"/home/robo/Projects/mbox/docs/Lighting.md",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller_api/v1/routing.py",
		"/home/robo/Projects/mbox/mbox-controller/src/requirements.txt",
		"/home/robo/winktmp",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller/configmgr/__init__.py",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller/backends/denon.py",
		"/home/robo/Projects/mbox/mbox-controller/.gitlab-ci.yml",
		"/home/robo/Projects/mbox/docs/HelpfulStuff",
		"/home/robo/Projects/mbox/mbox-common/templates/nginx.conf.j2",
		"/home/robo/Projects/mbox/mbox-old/bootstrap/ansible/roles/api-server/templates/gunicorn-defaults.j2",
		"/home/robo/Projects/mbox/mbox-controller/src/setup.py",
		"/home/robo/Projects/mbox/mbox-controller/scratch/redis-pg.py",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller/resources/zones.py",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller_api/application.py",
		"/home/robo/Projects/mbox/mbox-old/src/mbox/router.py",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller/resources/zone.py",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller_tests/controller/configmgr/test_cfgmgr.py",
		"/home/robo/Projects/mbox/mbox-controller/src/Pipfile",
		"/home/robo/Projects/mbox/mbox-stack.yml",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller/configmgr/stor_redis.py",
		"/home/robo/Projects/mbox/docs/TODO.md",
		"/home/robo/Projects/mbox/mbox-controller/.gitignore",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller_tests/api",
		"/home/robo/Projects/mbox/mbox-controller/src/mbox_controller_tests/api/__init__.py",
		"/home/robo/Projects/mbox/mbox-controller/src/tests/mbox_controller-tests/configmgr/test_cfgmgr.py",
		"/home/robo/Projects/mbox/mbox-controller/src/tests/mbox_controller/configmgr/__init__.py",
		"/home/robo/Projects/mbox/mbox-controller/src/tests/mbox_controller/__init__.py",
		"/home/robo/Projects/mbox/mbox-common/src/setup.py",
		"/home/robo/Projects/mbox/mbox-common/.gitlab-ci.yml",
		"/home/robo/Projects/mbox/mbox-common/src/mbox_common/__init__.py",
		"/home/robo/Projects/mbox/mbox-old/setup.py",
		"/home/robo/Projects/mbox/mbox-common/src/requirements.txt",
		"/home/robo/Projects/mbox/mbox-video/src/setup.py",
		"/home/robo/Projects/mbox/mbox-video/src/requirements.txt",
		"/home/robo/Projects/mbox/mbox-old/docker/Dockerfile-base",
		"/home/robo/Projects/nightingale-engine/build/cmake_install.cmake",
		"/home/robo/Projects/nightingale-engine/build/compile_commands.json",
		"/home/robo/Projects/nightingale-engine/.gitlab-ci.yml",
		"/home/robo/Projects/nightingale-engine/utils/install/system-prep/roles/core/tasks/main.yml",
		"/home/robo/Projects/nightingale-engine/utils/install/system-prep/roles/core/tasks/ubuntu.yml",
		"/home/robo/Projects/nightingale-engine/src/core/CMakeLists.txt",
		"/home/robo/Projects/nightingale-engine/docs/WORKLOG",
		"/home/robo/Projects/nightingale-engine/cmake/nightingale-ext-paths.cmake",
		"/home/robo/Projects/nightingale-engine/src/CMakeLists.txt",
		"/home/robo/Projects/nightingale-engine/utils/install/system-prep/nightingale-system-prep.yml",
		"/home/robo/Projects/nightingale-engine/utils/install/system-prep/roles/dependencies/vars/main.yml",
		"/home/robo/Projects/nightingale-engine/utils/install/system-prep/group_vars/all.yml",
		"/home/robo/Projects/nightingale-engine/utils/install/system-prep/roles/dependencies/tasks/main.yml",
		"/home/robo/Projects/nightingale-engine/conanfile.txt",
		"/home/robo/Projects/nightingale-engine/.gitignore",
		"/home/robo/Projects/nightingale-engine/src/core/mainloop.cpp",
		"/home/robo/Projects/nightingale-engine/utils/install/system-prep/roles/core/vars/main.yml",
		"/home/robo/Projects/nightingale-engine/docs/ubuntu-apt-requirements.txt",
		"/home/robo/Projects/nightingale-engine/utils/install/system-prep/roles/core/vars/Ubuntu.yml",
		"/home/robo/Projects/nightingale-engine/utils/install/system-prep/roles/core/vars/LinuxMint.yml",
		"/home/robo/Projects/nightingale-engine/CMakeLists.txt",
		"/home/robo/Projects/nightingale-engine/src/core/mainloop.hpp",
		"/home/robo/Projects/nightingale-engine/src/core/monocore/monomanager.hpp",
		"/home/robo/Projects/nightingale-engine/src/core/constants.hpp",
		"/home/robo/Projects/nightingale-engine/src/core/window/window.cpp",
		"/home/robo/Projects/nightingale-engine/src/core/window/window.hpp",
		"/home/robo/Projects/nightingale-engine/src/core/utils/frametimer.cpp",
		"/home/robo/Projects/nightingale-engine/src/core/utils/frametimer.hpp",
		"/home/robo/Projects/nightingale-engine/src/core/os-framework/sdl2/framework.hpp",
		"/home/robo/Projects/nightingale-engine/src/core/os-framework/sdl2/framework.cpp",
		"/home/robo/Projects/nightingale-engine/src/core/platform/windows/ng-entry.cpp",
		"/home/robo/Projects/nightingale-engine/build/src/core/input/CMakeFiles/inputmanager.dir/link.txt",
		"/home/robo/Projects/nightingale-engine/src/core/monocore/monomanager.cpp",
		"/home/robo/Projects/nightingale-engine/src/core/monocore/CMakeLists.txt",
		"/home/robo/Projects/nightingale-engine/src/script/CMakeLists.txt",
		"/home/robo/Projects/nightingale-engine/src/script/NightingaleEngine/CMakeLists.txt",
		"/home/robo/Projects/nightingale-engine/src/script/NightingaleEngine/NightingaleEngine.csproj",
		"/home/robo/Projects/nightingale-engine/src/script/NightingaleEngine/NightingaleEngine.csproj.DotSettings",
		"/home/robo/Projects/nightingale-engine/src/script/script.sln",
		"/home/nickw/Projects/robo-ext-builds/config/build-config.cmake"
	],
	"find":
	{
		"height": 32.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		},
		{
			"sheets":
			[
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			],
			[
				2,
				0,
				3,
				1
			]
		],
		"cols":
		[
			0.0,
			0.33,
			0.66,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "rapid-rest.sublime-project",
	"replace":
	{
		"height": 60.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				".giot",
				".gitignore"
			],
			[
				"Doc",
				"Dockerfile"
			],
			[
				"sched",
				"src/bunsched/scheduler.py"
			],
			[
				".gila",
				".gitlab-ci.yml"
			],
			[
				"Dockeri",
				"Dockerfile"
			],
			[
				".gitla",
				".gitlab-ci.yml"
			],
			[
				".git",
				".gitignore"
			],
			[
				"hue",
				"mbox-controller/src/mbox_controller/backends/lighting/hue.py"
			],
			[
				"test_",
				"mbox-controller/src/mbox_controller_tests/controller/configmgr/test_cfgmgr.py"
			],
			[
				"configmgr",
				"mbox-controller/src/mbox_controller/configmgr/__init__.py"
			],
			[
				"cons",
				"src/core/constants.hpp"
			],
			[
				"window",
				"src/core/window/window.hpp"
			],
			[
				"window.cpp",
				"src/core/window/window.cpp"
			],
			[
				"windows.cpp",
				"src/core/platform/windows/ng-entry.cpp"
			],
			[
				"framwo",
				"src/core/os-framework/sdl2/framework.hpp"
			],
			[
				"framewp",
				"src/core/os-framework/sdl2/framework.cpp"
			],
			[
				"main",
				"src/core/mainloop.cpp"
			],
			[
				"mainl/",
				"build/src/core/input/CMakeFiles/inputmanager.dir/link.txt"
			],
			[
				"monoma",
				"src/core/monocore/monomanager.hpp"
			],
			[
				"monoman",
				"src/core/monocore/monomanager.cpp"
			],
			[
				"apt",
				"docs/ubuntu-apt-requirements.txt"
			],
			[
				"ap",
				"docs/ubuntu-apt-requirements.txt"
			],
			[
				"mono.cmak",
				"cmake-builds/mono.cmake"
			],
			[
				".gi",
				".gitignore"
			],
			[
				".giti",
				".gitignore"
			],
			[
				"input.hp",
				"src/core/api/c/input.hpp"
			],
			[
				"svclo",
				"src/core/system/svclocator.hpp"
			],
			[
				"svc",
				"src/core/system/svclocator.cpp"
			],
			[
				"engineco",
				"src/core/system/enginecontroller.cpp"
			],
			[
				"frame",
				"src/core/os-framework/sdl2/framework.hpp"
			],
			[
				"engine",
				"src/core/system/enginecontroller.cpp"
			],
			[
				"engin",
				"src/core/system/enginecontroller.hpp"
			],
			[
				"framewo",
				"src/core/os-framework/sdl2/framework.hpp"
			],
			[
				"window.cp",
				"src/core/window/window.cpp"
			],
			[
				"framework",
				"src/core/os-framework/sdl2/framework.hpp"
			],
			[
				"sdl_key",
				"build/install/external/sdl2/include/SDL2/SDL_keyboard.h"
			],
			[
				"sdl_eve",
				"build/install/external/sdl2/include/SDL2/SDL_events.h"
			],
			[
				"gamecon",
				"build/install/external/sdl2/include/SDL2/SDL_gamecontroller.h"
			],
			[
				"sdlgam",
				"build/install/external/sdl2/include/SDL2/SDL_gamecontroller.h"
			],
			[
				"sdl_sca",
				"build/install/external/sdl2/include/SDL2/SDL_scancode.h"
			],
			[
				"sdl_ga",
				"build/install/external/sdl2/include/SDL2/SDL_gamecontroller.h"
			],
			[
				"const",
				"src/core/constants.hpp"
			],
			[
				"sdl_events",
				"build/install/external/sdl2/include/SDL2/SDL_events.h"
			],
			[
				"engi",
				"src/core/system/enginecontroller.hpp"
			],
			[
				"enginecon",
				"src/core/system/enginecontroller.cpp"
			],
			[
				"system",
				"src/core/api/c/system.cpp"
			],
			[
				"window.h",
				"src/core/window/window.hpp"
			],
			[
				"even",
				"src/core/events.hpp"
			],
			[
				"system.cpp",
				"src/core/api/c/system.cpp"
			],
			[
				"window.hpp",
				"src/core/window/window.hpp"
			],
			[
				"con",
				"src/core/constants.hpp"
			],
			[
				"inputcall",
				"src/core/input/inputcallbacks.hpp"
			],
			[
				"input.cpp",
				"src/core/api/c/input.cpp"
			],
			[
				"input.h",
				"src/core/api/c/input.hpp"
			],
			[
				"eventbu",
				"src/core/bus/eventbus.cpp"
			],
			[
				"eventbus",
				"src/core/bus/eventbus.cpp"
			],
			[
				"wind",
				"src/core/window/window.cpp"
			],
			[
				"system.c",
				"src/core/api/c/system.cpp"
			],
			[
				"input.cp",
				"src/core/api/c/input.cpp"
			],
			[
				"frametime",
				"src/core/utils/frametimer.cpp"
			],
			[
				"sdl_ke",
				"build/install/external/sdl2/include/SDL2/SDL_keyboard.h"
			],
			[
				"buildeven",
				"utils/build/buildeventids.py"
			],
			[
				"sdl_scan",
				"build/install/external/sdl2/include/SDL2/SDL_scancode.h"
			],
			[
				"gitig",
				".gitignore"
			],
			[
				"inputmana",
				"src/core/input/inputmanager.hpp"
			],
			[
				"inputman",
				"src/core/input/inputmanager.cpp"
			],
			[
				"event",
				"src/core/events.hpp"
			],
			[
				"win",
				"src/core/window/window.hpp"
			],
			[
				"tmp",
				"build/tmp"
			],
			[
				"build",
				"utils/build/buildeventids.py"
			],
			[
				"scancodes-",
				"build/scancodes-temp.hpp"
			],
			[
				"frametim",
				"src/core/utils/frametimer.cpp"
			],
			[
				"ng-",
				"src/core/platform/linux/ng-entry.cpp"
			],
			[
				"monomana",
				"src/core/monocore/monomanager.hpp"
			],
			[
				"struti",
				"src/core/utils/strutils.hpp"
			],
			[
				"input",
				"src/core/api/c/input.hpp"
			],
			[
				"ng-en",
				"src/core/platform/linux/ng-entry.cpp"
			],
			[
				"mainloo",
				"src/core/mainloop.hpp"
			],
			[
				"window.",
				"src/core/window/window.hpp"
			],
			[
				"constants",
				"src/core/constants.hpp"
			],
			[
				"monomanag",
				"src/core/monocore/monomanager.cpp"
			],
			[
				"input.hpp",
				"src/core/api/c/input.hpp"
			],
			[
				"system.hpp",
				"src/core/api/c/system.hpp"
			],
			[
				"system.",
				"src/core/api/c/system.cpp"
			],
			[
				"inputmanag",
				"src/core/input/inputmanager.cpp"
			],
			[
				"sdl2eve",
				"src/core/os-framework/sdl2/eventmap.hpp"
			],
			[
				"sdl_even",
				"build/install/external/sdl2/include/SDL2/SDL_events.h"
			],
			[
				"sdleventmap",
				"src/core/os-framework/sdl2/sdl2eventmap.hpp"
			],
			[
				"sdl2he",
				"src/core/os-framework/sdl2/sdl2helper.hpp"
			],
			[
				"types.",
				"src/core/types.hpp"
			],
			[
				"",
				"build/install/external/sdl2/include/SDL2/SDL_scancode.h"
			],
			[
				"events.",
				"src/core/events.hpp"
			],
			[
				"type",
				"src/core/types.hpp"
			],
			[
				"strutils",
				"src/core/utils/strutils.hpp"
			],
			[
				"spdlog.h",
				"build/install/external/spdlog/include/spdlog/spdlog.h"
			],
			[
				"ansicolor",
				"build/install/external/spdlog/include/spdlog/sinks/ansicolor_sink.h"
			],
			[
				"mono",
				"cmake/cmake-ext-builds/mono.cmake"
			],
			[
				"sdl2",
				"cmake/cmake-ext-builds/sdl2.cmake"
			],
			[
				"renderhp",
				"core/cpp/include/pengine/gfx/Renderer.hpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 2,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 250.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
